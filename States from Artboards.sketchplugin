// Sketch Framer (ctrl alt command s)

/* Import the variables and complain if they are undefined */
#import 'sketch-framer-states-config.js'
#import 'sandbox.js'
#import 'common.js'

var document_path = [[doc fileURL] path].split([doc displayName])[0],
    document_name = [doc displayName].replace(".sketch",""),
    target_folder = document_path + document_name,
    images_folder = target_folder + "/images",
    framer_folder = target_folder + "/framer",
    file_manager = [NSFileManager defaultManager],
    object_id = 0,
    AssetsOffset = 0,
    invisible_layers = [],
    project_metadata = [],
    states_metadata = {},
    layerNames ={},
    assetsPage,
    framerjs_url = "https://raw.githubusercontent.com/koenbok/FramerExamples/master/State%20Machine%20-%20Basics.framer/framer/framer.js",
    ASSETS_PAGE_NAME = "FramerComponents";

function download_file(url) {
  var filename = url.replace(/^.*(\\|\/|\:)/, ''),
      path = framer_folder + '/' + filename;
  if ([file_manager fileExistsAtPath:path]) { return; }
  var task = [[NSTask alloc] init],
      argsArray = [NSArray arrayWithObjects:"-O", url, nil];
  [task setCurrentDirectoryPath:framer_folder];
  [task setLaunchPath:"/usr/bin/curl"];
  [task setArguments:argsArray];
  [task launch];
}

function generate_states(artboards) {
  for (var artboardIndex = [artboards count] - 1; artboardIndex >= 0; artboardIndex--) {
    var artboard = [artboards objectAtIndex:artboardIndex]
    var artboardName = sanitize_filename([artboard name]);
    var artboardLayers = [artboard layers];

    states_metadata[artboardName] = {};

    log('checking artboard ' + artboardName + ' ' + [artboardLayers count]);

    for (var layerIndex = 0; layerIndex < [artboardLayers count]; layerIndex++) {
      var layer = [artboardLayers objectAtIndex:layerIndex];
      var layerName = sanitize_filename([layer name]);

      log('checking first layer '+ layerName);

      process_layer_states(layer, artboardName, 0);
    }

  }
}

function export_layers() {
  for (var i in layerNames){
    export_layer(layerNames[i]);
  }
}

function main() {

  log('########################################################################');
  
  var page = [doc currentPage];
  var artboards = [page artboards];

  if (![artboards count]) {
    [doc showMessage: "Sketch Framer: You must have multiple artboards for this to work"];
    return;
  }

  //BUG: Maybe it needs to be children rather than layers?
  updateAssetsPage(artboards);
  export_layers();
  
  generate_states(artboards);

  // Create folders
  create_folder(target_folder);
  create_folder(framer_folder);
  create_files();

  // Download framer.js
  download_file(framerjs_url);

  // Download library file if one is configured
  if (FramerLibraryUrl) {
    download_file(FramerLibraryUrl);
  }

  [doc setCurrentPage:page]
  [doc showMessage: "Sketch Framer: Project exported to “" + target_folder + "”"];
}

main();
